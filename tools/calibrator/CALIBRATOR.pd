#N canvas 491 47 719 688 12;
#N canvas 421 582 1028 549 IN~OUT 0;
#X obj 23 29 noise~;
#X obj 23 130 s~ OUT~;
#X obj 23 86 *~ 0;
#X obj 42 47 r outgain;
#X obj 42 66 min 1;
#X obj 23 109 quantize~;
#X msg 115 35 16bit;
#X obj 115 17 loadbang;
#X msg 182 34 8bit;
#X obj 320 37 r pd;
#X obj 320 62 route dsp;
#X obj 329 198 s \$0-dspstate;
#X msg 321 164 color \$1 0;
#X obj 320 93 select 0 1;
#X msg 318 118 13;
#X msg 359 123 16;
#X obj 407 87 loadbang;
#X obj 305 236 out_calibrate 25;
#X obj 64 162 out_calibrate 1;
#X obj 181 162 out_calibrate 2;
#X obj 64 179 out_calibrate 3;
#X obj 181 179 out_calibrate 4;
#X obj 64 196 out_calibrate 5;
#X obj 181 196 out_calibrate 6;
#X obj 64 213 out_calibrate 7;
#X obj 181 213 out_calibrate 8;
#X obj 64 236 out_calibrate 9;
#X obj 181 236 out_calibrate 10;
#X obj 64 253 out_calibrate 11;
#X obj 181 253 out_calibrate 12;
#X obj 64 270 out_calibrate 13;
#X obj 181 270 out_calibrate 14;
#X obj 64 287 out_calibrate 15;
#X obj 181 287 out_calibrate 16;
#X obj 64 307 out_calibrate 17;
#X obj 181 307 out_calibrate 18;
#X obj 64 324 out_calibrate 19;
#X obj 181 324 out_calibrate 20;
#X obj 64 341 out_calibrate 21;
#X obj 181 341 out_calibrate 22;
#X obj 64 358 out_calibrate 23;
#X obj 181 358 out_calibrate 24;
#X obj 305 252 out_calibrate 26;
#X obj 305 270 out_calibrate 27;
#X obj 305 287 out_calibrate 28;
#X obj 305 307 out_calibrate 29;
#X obj 305 323 out_calibrate 30;
#X obj 305 341 out_calibrate 31;
#X obj 305 360 out_calibrate 32;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 7 0 6 0;
#X connect 8 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 13 1 15 0;
#X connect 14 0 12 0;
#X connect 15 0 12 0;
#X connect 16 0 14 0;
#X restore 586 474 pd IN~OUT;
#X obj 477 103 env~;
#X floatatom 477 123 4 0 0 0 - - -;
#X msg 481 471 bang;
#X obj 481 492 s t_scope;
#X obj 477 339 s calibrate_activate;
#X floatatom 477 318 4 0 0 0 - - -;
#X floatatom 477 378 4 0 0 0 - - -;
#X obj 477 357 r calibrate_activate;
#N canvas 371 204 295 230 samp2m 0;
#X obj 136 39 inlet;
#X obj 173 74 samplerate~;
#X obj 173 55 loadbang;
#X obj 161 114 r soundspeed;
#X obj 136 94 / 44100;
#X obj 136 132 * 340;
#X obj 136 207 outlet;
#X obj 136 153 * 100;
#X obj 136 171 i;
#X obj 136 189 * 0.01;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 1 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 6 0;
#X restore 568 130 pd samp2m;
#X text 516 378 current speaker;
#X floatatom 568 148 4 0 0 0 - - -;
#N canvas 520 287 520 236 save 0;
#X obj 79 22 inlet;
#X msg 79 165 \; scope write \$1;
#X obj 79 144 makefilename spk%d.dat;
#X msg 118 118 1;
#X floatatom 151 119 4 0 0 0 - - -;
#X obj 79 100 f 99;
#X obj 350 212 table scope 16386;
#X obj 341 120 spigot;
#X obj 341 54 r finished_spk;
#X obj 79 44 route bang auto;
#X msg 378 96 1;
#X obj 378 75 route on;
#X msg 408 96 0;
#X msg 350 178 \; scope const 0;
#X connect 0 0 9 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 9 1 11 0;
#X connect 9 2 5 0;
#X connect 10 0 7 1;
#X connect 11 0 10 0;
#X connect 11 1 12 0;
#X connect 12 0 7 1;
#X restore 481 441 pd save raumimpulsantwort;
#X text 559 171 dist[m];
#X obj 568 108 unpack;
#X obj 634 130 rmstodb;
#X floatatom 634 149 4 0 0 0 - - -;
#X obj 568 88 r values;
#X text 633 171 amp[dB];
#N canvas 115 91 378 142 printer 0;
#X obj 25 22 r values;
#X obj 25 40 print VALUES;
#X obj 24 58 r calibrate;
#X obj 24 76 print CALIBRAT;
#X obj 237 24 r delay;
#X obj 237 66 print PEAK;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X restore 585 495 pd printer;
#X text 513 319 activate speaker;
#X msg 519 414 auto on;
#X msg 576 414 auto off;
#X msg 481 413 bang;
#N canvas 156 72 1249 835 readme 0;
#X text 60 70 this is the calibration-patch !!;
#X text 62 86 you will need this for calibrating your audio-setup.
;
#X text 159 22 CALIBRATOR HOW-TO:;
#X text 26 138 before you start:;
#X text 81 157 you should have set up a functioning pure-data.;
#X text 80 172 i suppose \, that you are using a multi-channel soundcard
(like the RME-Hammerfall);
#X text 43 476 the latency is stored in a file called "latenz.samples"
;
#N canvas 542 226 490 215 latenz.samples 0;
#X text 33 24 the file "latenz.samples" consists of only one integer
number \, defining the latency of your soundcard \, when you connect
the outlet of that card to its inlet.;
#X text 44 146 read more about this in the patch itself.;
#X text 43 96 the "LATENCY.pd" is not within the CALIBRATOR patch \,
because it might damage your ears and speakers.;
#X restore 203 531 pd latenz.samples;
#X text 45 493 you probably really should have such a file \, for if
your systems latency is too high \, your measurement might give unreliable
data !!;
#X text 650 42 the actual measurement:;
#X text 679 55 measuring your audio-system is (hopefully) made easy
with this patch:;
#X text 693 215 distortion will also distort your measurement;
#X text 691 116 1.) adjust the output level as needed by your system.
remember that a level of 100dB equals the maximum digital output of
any soundcard. since you might use audio-hardware (like limiters) after
your D/A-conversion \, it might be a good idea \, to adjust the level
\, so the signal is not distorted by this (meaning: you should create
an audio-signal that is below the limiter-treshold).;
#X text 691 236 2.) after you have done so \, you can start the actual
measuring-process. this is done via the button;
#X msg 1024 252 START;
#X text 49 582 if you haven't yet done so \, connect your soundcard
the sound-reproduction system. set up a mono-microphone somewhere in
the middle of the auditory and connect it to your soundcard \, so that
the microphone channel is present at the soundcard-channel 1 in the
lower-left corner of the calibrator-patch you can see a level-display
\, so you can make sure that everything is working fine.;
#X text 50 684 you should really use a high quality microphone with
a spheric characteristic ("omnidirectional") to make a good measurement.
;
#X text 50 735 in most of the cases \, the microphone should be placed
in the center of the listening area. but of course you might want to
calibrate your system with respect to an arbitrary point in the auditory.
;
#X text 691 275 the measuring will start immediatly. one speaker after
the other will play back white noise. the soundfield is recorded by
the microphone and then analysed \, with respect to the overall amplitude
and the delay of the speaker with respect to the calibration-position.
;
#X text 693 346 these measurement-values are calculated into pairs
of delay- (in samples) and amplification-factors \, that have to be
applied on the matching speakers \, so that all speakers will be equally
loud and in phase in the calibration-position.;
#X text 695 417 since the measurement should take place at the highest
possible volume \, it is normally not a good idea to stay in the room
while the measurement commences. even more so \, because the presence
of "loud" objects (like people) might distort the measurement. therefore
there is another button that starts the measuring after a pause of
10 seconds. normally this is enough to leave the room.;
#X text 693 553 3.) after the measurement is finished (and everything
is quiet again) \, the calibration-values should be stored in a file
\, so they can be used by other pd-patches;
#X text 695 596 this can be done with the buttons;
#X msg 936 599 write;
#X msg 988 599 writeas...;
#X text 697 619 the default filename will be "compensation.mtx";
#X text 695 652 4.) even after saving the values to a file \, they
are not automatically applied to other patches that would like to use
them. this is \, because it might prove dangerous to overwrite an existing
calibration;
#X text 695 709 to apply the calibration \, the file "calibration.mtx"
has to be stored into a directory that is searched by pd. you can copy
the file manually to such a directory or use the button in the "pd
apply"-subpatch. the file is then saved in the directory where all
the standard routines for calibrated-ouput "[main-out~]" are living.
;
#X msg 1099 736 apply;
#N canvas 527 253 600 727 how 0;
#X text 31 46 the measurement consists of 2 parts:;
#X text 58 92 1.) speaker-amplitude;
#X text 77 112 this is simply a measurement of the amplitude of the
microphone-signal. for stability reasons \, this is averaged about
15 seconds.;
#X text 78 166 since we are only interested in the relative amplitude
of one speaker with respect to the others \, it is of no importance
to get the real "loudness" each speaker produces;
#X text 61 233 2.) speaker-delay;
#X text 84 254 this is a bit more complex. to measure the delay of
the speakers we compare the original generated noise with the microphone-recorded.
;
#X text 85 296 by doing a so called "cross-correlation" we gather information
\, of what the has happened to the signal in the time-domain between
being send to the output of the soundcard and returning to its input
;
#X text 82 360 from this "room-impulse-response" we can read the time
it takes for the signal to get back into the PC.;
#X text 95 400 cross-correlation is very stable with respect to sounds
that exist in the room but are not generated by the noise-generator.
;
#X text 93 445 unluckily \, we only can take measurements in frames
of 16000 samples. while this is no problem for normal room-dimensions
\, it prooves problematic when a) the latency of the soundcard is too
big (because then the measured point would be outside our frame and
coud not be measured) and b) the room is too reverberant (because long
reverberations appear somehow shifted in our measurement --> "circular
cross-correlation");
#X text 91 603 ad b) this problem seems to be of a theoretic nature
\, since we are only trying to find the first peak within this room-impulse-response
(which should match the direct sound of the speaker reaching the microphone).
i \, personally \, have never encountered problems with the circular
cross-correlation (that is \, the "direct" peak was always clearly
distinguishable from the rest);
#X text 92 557 ad a) to reduce the effect of the latency of the soundcard
\, you should measure it first. it will then be compensated (see above)
;
#X restore 820 523 pd how does it work;
#X text 42 420 0.) after you have checked your speaker-setting \, you
maybe want to test the latency of your PC+soundcard. there is a "LATENCY.pd"
file around somewhere in this directory \, which you can use.;
#X text 82 201 first of all you should set up your speakers in a proper
way.;
#X text 680 83 there are 8 inputs \, please open an assign your adc
\, then select the proper one with gain;
#X restore 554 15 pd readme;
#X text 447 15 what is this ?;
#X text 273 16 CALIBRATOR patch;
#X text 273 26 ================;
#X obj 477 170 vsl 15 128 0 100 0 0 empty empty empty 0 -8 0 8 -262144
-1 -1 0 1;
#X obj 498 169 > 99;
#X obj 497 219 bng 30 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 497 191 sel 1;
#X text 497 249 CLIP;
#X obj 19 76 cnv 15 440 600 empty empty empty 20 12 0 14 -233017 -66577
0;
#X floatatom 208 423 4 0 0 0 - - -;
#X msg 208 379 START;
#X obj 208 289 s outgain;
#X floatatom 208 248 4 0 0 0 - - -;
#X obj 208 268 dbtorms;
#X obj 208 359 del 10000;
#X msg 208 339 bang;
#X text 260 343 the room;
#N canvas 197 83 368 287 write 0;
#X obj 54 48 route write writeas...;
#X obj 128 75 bang;
#X obj 54 185 s writecalibrat;
#X obj 54 24 inlet;
#X obj 158 161 s cal_file;
#X obj 128 97 savepanel;
#X obj 128 118 t b s;
#X obj 158 141 symbol compensation.mtx;
#X obj 54 99 symbol;
#X obj 54 122 t b a;
#X obj 34 73 route bang;
#X connect 0 0 10 0;
#X connect 0 1 1 0;
#X connect 1 0 5 0;
#X connect 3 0 0 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 7 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 9 0 2 0;
#X connect 9 1 7 0;
#X connect 10 0 9 0;
#X connect 10 1 8 0;
#X restore 206 529 pd write;
#X msg 253 506 writeas...;
#X text 254 332 10sec to leave;
#X msg 308 377 STOP;
#X text 245 423 actual speaker;
#N canvas 356 98 600 400 getlatency 0;
#X text 56 67 if the latency of your soundcard is too high \, you might
get problems when trying to measure the delay of the speakers (due
to buffer-restrictions);
#X text 56 115 there are 2 solutions to this:;
#X text 78 134 1 pray that your latency is small;
#X text 57 192 because i am sending hard clicks to the output of your
soundcard \, which might damage your ears \, headphones \, speakers...
you have to run the "LATENCY"-patch on your own.;
#X text 78 150 2 measure the latency with the "LATENCY"-patch that
can be found in this directory;
#X restore 204 93 pd getlatency;
#X obj 208 399 calibrator_main;
#X text 43 93 0 run "LATENCY";
#X text 43 248 2 set the ouput level;
#X text 43 338 3 start measurement;
#X text 43 498 4 save measurement;
#X text 43 608 5 apply calibration;
#X obj 434 576 cnv 15 200 100 empty empty empty 20 12 0 14 -233017
-66577 0;
#X text 213 608 copy the matrix to CUBEmixer/etc/CUBEmixer/compensation.mtx
;
#X obj 35 14 cnv 15 100 60 empty \$0-dspstate empty 20 12 0 14 -258699
-262144 0;
#X msg 50 27 \; pd dsp 1;
#X obj 231 150 nbx 3 14 0 512 0 0 speakers speakers num:speakers 0
-8 0 10 -262144 -1 -1 24 256;
#X text 43 148 1 set number of speakers;
#X msg 206 484 write compensation.mtx;
#N canvas 912 362 680 257 INS 0;
#X obj 27 31 cnv 15 438 68 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 24 3 adc~ 1;
#X obj 24 128 gain;
#X obj 33 157 env~;
#X obj 31 48 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10 -257985
-1 -1 0 256;
#X obj 32 79 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 75 129 gain;
#X obj 84 158 env~;
#X obj 82 49 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10 -257985
-1 -1 0 256;
#X obj 83 80 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 128 130 gain;
#X obj 137 159 env~;
#X obj 135 50 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10
-257985 -1 -1 0 256;
#X obj 136 81 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 180 130 gain;
#X obj 189 159 env~;
#X obj 187 50 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10
-257985 -1 -1 0 256;
#X obj 188 81 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 236 130 gain;
#X obj 245 159 env~;
#X obj 243 50 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10
-257985 -1 -1 0 256;
#X obj 244 81 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 290 131 gain;
#X obj 299 160 env~;
#X obj 297 51 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10
-257985 -1 -1 0 256;
#X obj 298 82 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 341 132 gain;
#X obj 350 161 env~;
#X obj 348 52 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10
-257985 -1 -1 0 256;
#X obj 349 83 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 391 131 gain;
#X obj 400 160 env~;
#X obj 398 51 nbx 3 14 -1e+37 1e+37 0 0 empty empty gain 0 -8 0 10
-257985 -1 -1 0 256;
#X obj 399 82 nbx 3 14 -1e+37 1e+37 0 0 empty empty vu 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 75 4 adc~ 2;
#X obj 128 5 adc~ 3;
#X obj 180 5 adc~ 4;
#X obj 236 4 adc~ 5;
#X obj 290 6 adc~ 6;
#X obj 341 7 adc~ 7;
#X obj 391 6 adc~ 8;
#X obj 25 188 throw~ IN;
#X obj 74 218 throw~ IN;
#X obj 181 220 throw~ IN;
#X obj 290 220 throw~ IN;
#X obj 390 224 throw~ IN;
#X obj 129 190 throw~ IN;
#X obj 237 190 throw~ IN;
#X obj 342 192 throw~ IN;
#X obj 473 222 s~ IN;
#X obj 471 187 catch~ IN;
#X obj 443 61 tgl 15 0 prepare_all prepare_all ALL 0 -7 0 10 -257985
-1 -1 0 1;
#X text 466 58 noise to all spk;
#X text 426 70 noise;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 41 0;
#X connect 3 0 5 0;
#X connect 4 0 2 1;
#X connect 6 0 7 0;
#X connect 6 0 42 0;
#X connect 7 0 9 0;
#X connect 8 0 6 1;
#X connect 10 0 11 0;
#X connect 10 0 46 0;
#X connect 11 0 13 0;
#X connect 12 0 10 1;
#X connect 14 0 15 0;
#X connect 14 0 43 0;
#X connect 15 0 17 0;
#X connect 16 0 14 1;
#X connect 18 0 19 0;
#X connect 18 0 47 0;
#X connect 19 0 21 0;
#X connect 20 0 18 1;
#X connect 22 0 23 0;
#X connect 22 0 44 0;
#X connect 23 0 25 0;
#X connect 24 0 22 1;
#X connect 26 0 27 0;
#X connect 26 0 48 0;
#X connect 27 0 29 0;
#X connect 28 0 26 1;
#X connect 30 0 31 0;
#X connect 30 0 45 0;
#X connect 31 0 33 0;
#X connect 32 0 30 1;
#X connect 34 0 6 0;
#X connect 35 0 10 0;
#X connect 36 0 14 0;
#X connect 37 0 18 0;
#X connect 38 0 22 0;
#X connect 39 0 26 0;
#X connect 40 0 30 0;
#X connect 50 0 49 0;
#X coords 0 -1 1 1 440 70 1 25 30;
#X restore 18 170 pd INS;
#X obj 477 84 r~ IN;
#X connect 1 0 2 0;
#X connect 2 0 28 0;
#X connect 2 0 29 0;
#X connect 3 0 4 0;
#X connect 6 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 11 0;
#X connect 14 0 9 0;
#X connect 14 1 15 0;
#X connect 15 0 16 0;
#X connect 17 0 14 0;
#X connect 21 0 12 0;
#X connect 22 0 12 0;
#X connect 23 0 12 0;
#X connect 29 0 31 0;
#X connect 31 0 30 0;
#X connect 35 0 48 0;
#X connect 37 0 38 0;
#X connect 38 0 36 0;
#X connect 39 0 35 0;
#X connect 40 0 39 0;
#X connect 43 0 42 0;
#X connect 45 0 48 1;
#X connect 48 0 34 0;
#X connect 60 0 42 0;
#X connect 62 0 1 0;
